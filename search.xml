<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用SpringBoot + Undertow 构建一个支持 https + http2 的服务</title>
    <url>/2019/06/17/build-https-http2-service-by-using-springboot-undertow/</url>
    <content><![CDATA[<p>通过本篇文章，你将能够基于 SpringBoot + Undertow 构建一个支持 https + http2 的服务。</p>
<h2 id="创建工程"><a class="markdownIt-Anchor" href="#创建工程"></a> 创建工程</h2>
<p>此处使用的是 Gradle，Maven用户只需要将关键项做语法迁移即可。</p>
<p>使用 <a href="https://start.spring.io/">https://start.spring.io/</a> 来初始化工程，需要使用 <code>lombok</code> 和 <code>Spring Web Starter</code>两个依赖。</p>
<p><img src="/2019/06/17/build-https-http2-service-by-using-springboot-undertow/SpringInitializr.png" alt="SpringInitializr"></p>
<p>将生成好的工程导入 IDEA 中，修改 <code>build.gradle</code>文件为以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    ext &#123;</span><br><span class="line">        springBootVersion = &#x27;2.1.2.RELEASE&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        maven &#123; url &quot;http://maven.aliyun.com/nexus/content/groups/public/&quot;&#125;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath(&quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apply plugin: &#x27;java&#x27;</span><br><span class="line">apply plugin: &#x27;idea&#x27;</span><br><span class="line">apply plugin: &#x27;application&#x27;</span><br><span class="line">apply plugin: &#x27;org.springframework.boot&#x27;</span><br><span class="line">apply plugin: &#x27;io.spring.dependency-management&#x27;</span><br><span class="line"></span><br><span class="line">group = &#x27;cn.yuezhuangshi.learn&#x27;</span><br><span class="line">version = &#x27;1.0-SNAPSHOT&#x27;</span><br><span class="line">sourceCompatibility = 1.8</span><br><span class="line">targetCompatibility = 1.8</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenLocal()</span><br><span class="line">    maven &#123; url &quot;http://maven.aliyun.com/nexus/content/groups/public/&quot;&#125;</span><br><span class="line">    maven &#123; url &quot;https://repo.spring.io/milestone&quot; &#125;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configurations &#123;</span><br><span class="line">    compileOnly &#123;</span><br><span class="line">        extendsFrom annotationProcessor</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    // SpringBoot依赖</span><br><span class="line">    implementation (&#x27;org.springframework.boot:spring-boot-starter-web&#x27;) &#123;</span><br><span class="line">        exclude module: &#x27;spring-boot-starter-tomcat&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    // 使用高性能 web 容器 Undertow</span><br><span class="line">    implementation (&#x27;org.springframework.boot:spring-boot-starter-undertow&#x27;)</span><br><span class="line"></span><br><span class="line">    compileOnly (&#x27;org.projectlombok:lombok&#x27;)</span><br><span class="line">    testImplementation (&#x27;junit:junit:4.12&#x27;)</span><br><span class="line">    testImplementation (&#x27;org.springframework.boot:spring-boot-starter-test&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述的 <code>build.gradle</code> 是类似 Maven 的 <code>pom.xml</code>的东西，里面做的修改主要是排除 Tomcat 依赖，引入 Undertow 依赖。</p>
<p>到这里，工程就已经初始化完成了。</p>
<h2 id="准备证书"><a class="markdownIt-Anchor" href="#准备证书"></a> 准备证书</h2>
<p>我这里直接使用 mkcert 来生成本地 localhost 的证书来用，如果你还不了解 mkcert，可以看看 <a href="#">Post not found: 使用mkcert生成本地localhost的https证书</a><br>
我依然会在此处列出必要的步骤，以保证文章的完整性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkcert -pkcs12 localhost 127.0.0.1 ::1</span></span><br><span class="line">Using the local CA at &quot;/Users/jasper/Library/Application Support/mkcert&quot; ✨</span><br><span class="line"></span><br><span class="line">Created a new certificate valid for the following names 📜</span><br><span class="line"> - &quot;localhost&quot;</span><br><span class="line"> - &quot;127.0.0.1&quot;</span><br><span class="line"> - &quot;::1&quot;</span><br><span class="line"></span><br><span class="line">The PKCS#12 bundle is at &quot;./localhost+2.p12&quot; ✅</span><br></pre></td></tr></table></figure>
<p>证书会被生成在当前目录下，我们直接将证书文件复制到上一步创建的工程里，放置在 resources 目录下即可。（我这里多放了一层文件夹）</p>
<p><img src="/2019/06/17/build-https-http2-service-by-using-springboot-undertow/ProjectStructure.png" alt="ProjectStructure"></p>
<h2 id="工程配置及编码验证"><a class="markdownIt-Anchor" href="#工程配置及编码验证"></a> 工程配置及编码验证</h2>
<p>工程和证书都准备好后，就可以正式进入编码环节了。<br>
初始化出来的工程配置默认是 <code>application.properties</code>，我个人习惯使用 <code>application.yml</code>，在 <code>application.yml</code> 中配置如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="comment"># https 端口</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">http2:</span></span><br><span class="line">    <span class="comment"># 开启 http2</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="comment"># mkcert -pkcs12 localhost 127.0.0.1 ::1</span></span><br><span class="line">    <span class="attr">key-store:</span> <span class="string">classpath:cert/localhost+2.p12</span></span><br><span class="line">    <span class="comment"># mkcert 默认生成.p12的密码为changeit</span></span><br><span class="line">    <span class="attr">key-store-password:</span> <span class="string">changeit</span></span><br></pre></td></tr></table></figure>
<p>此时，随便写一个 InfoController，来验证是否成功开启 Https</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InfoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">https2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Http2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>启动工程，访问 <a href="https://localhost:8443">https://localhost:8443</a> 或 <a href="https://127.0.0.1:8443">https://127.0.0.1:8443</a>，如果可以访问并且能够看到 “Http2” 的字样，说明此时 Https 已经开启成功。</p>
<p>我们刚才也已经开启了 Http2，那么如何验证我们已经成功开启了 Http2 呢？</p>
<p>法一：<br>
在 Chrome 浏览器开发者工具的 Console 面板中执行如下代码，如果开启 Http2，你应该可以看到 “本站点使用了HTTP/2”的字样</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 保证这个方法只在支持loadTimes的chrome浏览器下执行</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.chrome &amp;&amp; <span class="keyword">typeof</span> chrome.loadTimes === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> loadTimes = <span class="built_in">window</span>.chrome.loadTimes();</span><br><span class="line">        <span class="keyword">var</span> spdy = loadTimes.wasFetchedViaSpdy;</span><br><span class="line">        <span class="keyword">var</span> info = loadTimes.npnNegotiatedProtocol || loadTimes.connectionInfo;</span><br><span class="line">        <span class="comment">// 就以 「h2」作为判断标识</span></span><br><span class="line">        <span class="keyword">if</span>(spdy &amp;&amp; <span class="regexp">/^h2/i</span>.test(info)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">console</span>.info(<span class="string">&#x27;本站点使用了HTTP/2&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">&#x27;本站点没有使用HTTP/2&#x27;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>
<p><img src="/2019/06/17/build-https-http2-service-by-using-springboot-undertow/Chrome.png" alt="Chrome"></p>
<p>法二：<br>
在 Firefox 浏览器开发者工具的 Network 面板中查看当前请求，里面可以直接看到当前使用的 Http 协议版本</p>
<p><img src="/2019/06/17/build-https-http2-service-by-using-springboot-undertow/Firefox.png" alt="Firefox"></p>
<h2 id="http-转发到-https"><a class="markdownIt-Anchor" href="#http-转发到-https"></a> Http 转发到 Https</h2>
<p>有的时候我们希望当用户通过 Http 访问时，把他自动跳转到 Https，这个需求也很常见。</p>
<p>在之前的工程基础上，我们在 <code>application.yml</code> 增加一个 Http 的端口配置，完整的配置如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">http2:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="comment"># mkcert -pkcs12 localhost 127.0.0.1 ::1</span></span><br><span class="line">    <span class="attr">key-store:</span> <span class="string">classpath:cert/localhost+2.p12</span></span><br><span class="line">    <span class="comment"># mkcert 默认生成.p12的密码为changeit</span></span><br><span class="line">    <span class="attr">key-store-password:</span> <span class="string">changeit</span></span><br></pre></td></tr></table></figure>
<p>增加一个自动配置类 <code>WebServerConfiguration.java</code>，实现将 Http 自动跳转到 Https。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebServerConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * http服务端口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;custom.server.http.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer httpPort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * https服务端口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer httpsPort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 采用Undertow作为服务器。</span></span><br><span class="line"><span class="comment">     * Undertow是一个用java编写的、灵活的、高性能的Web服务器，提供基于NIO的阻塞和非阻塞API，特点：</span></span><br><span class="line"><span class="comment">     * 非常轻量级，Undertow核心瓶子在1Mb以下。它在运行时也是轻量级的，有一个简单的嵌入式服务器使用少于4Mb的堆空间。</span></span><br><span class="line"><span class="comment">     * 支持HTTP升级，允许多个协议通过HTTP端口进行多路复用。</span></span><br><span class="line"><span class="comment">     * 提供对Web套接字的全面支持，包括JSR-356支持。</span></span><br><span class="line"><span class="comment">     * 提供对Servlet 3.1的支持，包括对嵌入式servlet的支持。还可以在同一部署中混合Servlet和本机Undertow非阻塞处理程序。</span></span><br><span class="line"><span class="comment">     * 可以嵌入在应用程序中或独立运行，只需几行代码。</span></span><br><span class="line"><span class="comment">     * 通过将处理程序链接在一起来配置Undertow服务器。它可以对各种功能进行配置，方便灵活。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletWebServerFactory <span class="title">undertowFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UndertowServletWebServerFactory undertowFactory = <span class="keyword">new</span> UndertowServletWebServerFactory();</span><br><span class="line">        undertowFactory.addBuilderCustomizers((Undertow.Builder builder) -&gt; &#123;</span><br><span class="line">            builder.addHttpListener(httpPort, <span class="string">&quot;0.0.0.0&quot;</span>);</span><br><span class="line">            <span class="comment">// 开启HTTP2</span></span><br><span class="line">            builder.setServerOption(UndertowOptions.ENABLE_HTTP2, <span class="keyword">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        undertowFactory.addDeploymentInfoCustomizers(deploymentInfo -&gt; &#123;</span><br><span class="line">            <span class="comment">// 开启HTTP自动跳转至HTTPS</span></span><br><span class="line">            deploymentInfo.addSecurityConstraint(<span class="keyword">new</span> SecurityConstraint()</span><br><span class="line">                    .addWebResourceCollection(<span class="keyword">new</span> WebResourceCollection().addUrlPattern(<span class="string">&quot;/*&quot;</span>))</span><br><span class="line">                    .setTransportGuaranteeType(TransportGuaranteeType.CONFIDENTIAL)</span><br><span class="line">                    .setEmptyRoleSemantic(SecurityInfo.EmptyRoleSemantic.PERMIT))</span><br><span class="line">                    .setConfidentialPortManager(exchange -&gt; httpsPort);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> undertowFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>此时，我们再重新启动工程，访问 <a href="http://localhost:8080">http://localhost:8080</a>，会发现页面被自动跳转到了 <a href="https://localhost:8443">https://localhost:8443</a>，并看到了 “Http2” 的字样</p>
<h2 id="使http-转发到-https变为可选项"><a class="markdownIt-Anchor" href="#使http-转发到-https变为可选项"></a> 使Http 转发到 Https变为可选项</h2>
<p>但日常开发中，我们并不一定会将 Http 自动跳转到 Https。<br>
我们需要一定的灵活性，当我们配置了 Http 端口的时候，就给我们自动跳转，不配置，则不进行自动跳转。</p>
<p>这个需求我们也是能做的，只需要利用 SpringBoot 的自动配置原理即可。</p>
<p>修改 <code>WebServerConfiguration.java</code>，给类添加如下注解即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ConditionalOnProperty(prefix = &quot;custom.server.http&quot;, name = &quot;port&quot;, matchIfMissing = false)</span></span><br></pre></td></tr></table></figure>
<p><code>@ConditionalOnProperty</code> 这个注解可以用来控制配置是否生效。</p>
<ul>
<li>matchIfMissing: 缺少某个属性时，是否可以正常加载被注解标注的配置类。<code>true</code>代表缺少属性，也一样会加载，<code>false</code>则代表如果缺少，则不加载</li>
<li>havingValue: 比较获取到的属性值与havingValue给定的值是否相同，相同才加载配置</li>
</ul>
<p>此时，改造就已经完成了，我们可以注释掉 <code>application.yml</code> 中的 <code>custom.server.http.port</code> 配置，来关闭 Http 跳转到 Https，通过取消注释来开启 Http 跳转到 Https。</p>
<h2 id="延伸"><a class="markdownIt-Anchor" href="#延伸"></a> 延伸</h2>
<p>细心的你可能会发现，我们必须要通过注释这段配置，才可以打开/关闭 Http 跳转到 Https，这意味着我们在发布时，需要根据要求来调整配置，但这样是不合理的。</p>
<p>我们希望的是，<strong>不管在哪个环境部署，都不需要再改动工程内的内容</strong>。</p>
<p>因此，我们可以去掉 <code>application.yml</code> 中的 <code>custom.server.http.port</code> 配置，默认不开启 Http 跳转到 Https，通过启动时追加 <code>custom.server.http.port</code> 参数来实现之前的 Http 跳转到 Https。对于 Docker 内部署的微服务，则只需要添加 <code>custom.server.http.port</code> 的环境变量即可。</p>
<p>这样一来，我们就不需要调整代码来控制是否打开/关闭 Http 跳转到 Https了。</p>
]]></content>
      <categories>
        <category>MicroService</category>
      </categories>
      <tags>
        <tag>springboot</tag>
        <tag>undertow</tag>
        <tag>http2</tag>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title>禁用 GitLab Merge Request 页面上的 Resolve Conflicts 按钮</title>
    <url>/2021/08/02/disable-resolve-conflicts-buttion-in-gitlab/</url>
    <content><![CDATA[<p>通过本篇文章，你将能够禁用 GitLab（v11.3.0） Merge Request 页面上的 Resolve Conflicts 按钮。</p>
<h2 id="整体思路"><a class="markdownIt-Anchor" href="#整体思路"></a> 整体思路</h2>
<p><img src="/2021/08/02/disable-resolve-conflicts-buttion-in-gitlab/GitLabMergeRequestConflictsPage.png" alt="MR 冲突页面"><br>
先观察 GitLab Merge Request 的页面中 <code>Resolve conflicts</code> 的左右元素，左侧有文本，右侧有按钮。<br>
查看 GitLab CE <a href="https://gitlab.com/rluna-gitlab/gitlab-ce/-/tree/v11.3.0">v11.3.0</a> 版本的源码发现，出现 <code>Resolve conflicts</code> 字样且符合元素排布展示的为页面 <code>app/assets/javascripts/vue_merge_request_widget/components/states/mr_widget_conflicts.vue</code>，如图所示：<br>
<img src="/2021/08/02/disable-resolve-conflicts-buttion-in-gitlab/GitLabMergeRequestPageSource.png" alt="GitLab Merge Request"></p>
<blockquote>
<p>GitLab 中主要有两种前端页面，一种是 haml 的模版页面，一种是 vue 的页面。<br>
haml 的模版页面对于源文件的修改会直接作用到页面上，而 vue 的页面都是通过 webpack 打包为静态文件来使用的，所以对于源文件的修改没有任何意义。</p>
</blockquote>
<p>我们想要禁用掉这个按钮，除了修改源文件，通过 css 的覆盖则是另一种有效的方法，按钮上的 css class <code>js-resolve-conflicts-button</code> 是一个比较好的切入点。</p>
<h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2>
<h3 id="启动一个测试用的-gitlab"><a class="markdownIt-Anchor" href="#启动一个测试用的-gitlab"></a> 启动一个测试用的 GitLab</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    --rm \</span><br><span class="line">    --name=&#x27;gitlab-ce&#x27; -d \</span><br><span class="line">    --restart always \</span><br><span class="line">    -p 10022:22 \</span><br><span class="line">    -p 80:80 \</span><br><span class="line">    gitlab/gitlab-ce:11.3.0-ce.0</span><br></pre></td></tr></table></figure>
<p>准备一个存在合并冲突的 Merge Request 备用，后续验证效果。</p>
<h3 id="覆盖-css隐藏-resolve-conflicts-按钮"><a class="markdownIt-Anchor" href="#覆盖-css隐藏-resolve-conflicts-按钮"></a> 覆盖 CSS，隐藏 Resolve Conflicts 按钮</h3>
<p>执行命令 <code>docker exec -it gitlab-ce bash</code>，进入到容器中，找到如下 css 文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/opt/gitlab/embedded/service/gitlab-rails/public/assets/application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css</span><br></pre></td></tr></table></figure>
<p>在文件末尾追加需覆盖的 CSS</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.js-resolve-conflicts-button</span>&#123;<span class="attribute">display</span>:none&#125;</span><br></pre></td></tr></table></figure>
<p>在 <code>/opt/gitlab/embedded/service/gitlab-rails/public/assets/</code> 路径下，执行如下命令生成新的压缩 css</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gzip -c application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css &gt; application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css.gz</span><br></pre></td></tr></table></figure>
<p>直接刷新 Merge Request 页面后，会发现其实没有变化，原因是客户端本地已经缓存了修改前的静态文件，就不会再找服务端取新的文件了。<br>
这时候客户端可以 Disable Cache，再刷新页面就可以看到期望结果了。但弊端也很明显，线上不可能要求所有人都这样配合来做。</p>
<h3 id="强制刷新客户端缓存使修改生效"><a class="markdownIt-Anchor" href="#强制刷新客户端缓存使修改生效"></a> 强制刷新客户端缓存，使修改生效</h3>
<p>要解决缓存的问题，只需要给这个 css 文件加一个版本即可，客户端就会取新的文件了。<br>
从源码中发现，静态文件的引入和 <code>.sprockets-manifest-a0472862966d175769c64db6472b5b23.json</code> 这个文件有关，作如下修改即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;application.css&quot;:&quot;application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将上述内容修改为如下所示</span></span><br><span class="line">&quot;application.css&quot;:&quot;application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css?v=1234&quot;</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/02/disable-resolve-conflicts-buttion-in-gitlab/GitLabMergeRequestAfterModify.png" alt="修改生效后的 Merge Request 页面"></p>
<h3 id="持久化修改"><a class="markdownIt-Anchor" href="#持久化修改"></a> 持久化修改</h3>
<p>保存如上文件至本地，挂载到 GitLab 的容器中使用，对应的挂载路径如下所示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.sprockets-manifest-a0472862966d175769c64db6472b5b23.json -&gt; /opt/gitlab/embedded/service/gitlab-rails/public/assets/.sprockets-manifest-a0472862966d175769c64db6472b5b23.json</span><br><span class="line">application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css -&gt; /opt/gitlab/embedded/service/gitlab-rails/public/assets/application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css</span><br><span class="line">application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css.gz -&gt; /opt/gitlab/embedded/service/gitlab-rails/public/assets/application-e9df191d9f0417750d8d3e3d5c894a9e2166a68225e23d62b7fff88e7930bf43.css.gz</span><br></pre></td></tr></table></figure>
<p>如果遇到权限问题，执行下 <code>docker exec -it gitlab-ce update-permissions</code> 就可以了。</p>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 mkcert 生成本地 localhost 的 https证书</title>
    <url>/2019/06/17/generate-localhost-cert-by-using-mkcert/</url>
    <content><![CDATA[<p>使用 mkcert 不需要任何配置就可以生成本地可信的开发证书。<br>
它隐藏了生成有效的TLS证书所需的所有知识，适用于任何主机名、IP，包括 localhost，但需要注意的是，<strong>只可以在本地使用</strong>。</p>
<p>通过本篇文章，你将能够通过 mkcert 生成本地可信的开发证书。</p>
<h2 id="安装-mkcert"><a class="markdownIt-Anchor" href="#安装-mkcert"></a> 安装 mkcert</h2>
<p>安装的方法和说明都在 Github 中写的比较清楚，用户可自行对照操作系统版本使用相应的命令来安装 mkcert。<br>
<a href="https://github.com/FiloSottile/mkcert#installation">Github mkcert installation</a></p>
<p>我使用的 Mac OS，因此选用 Homebrew 的方法来进行安装，官方源会比较慢，建议换为中科大镜像源，具体方法请参照 <a href="#">Post not found: 镜像源替换汇总</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install mkcert</span><br><span class="line">brew install nss # if you use Firefox</span><br></pre></td></tr></table></figure>
<p>下载完成后，需要进行一个安装操作：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 第一次执行需要输入用户密码，获取权限</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkcert -install</span></span><br><span class="line">Created a new local CA at &quot;/Users/jasper/Library/Application Support/mkcert&quot; 💥</span><br><span class="line">The local CA is now installed in the system trust store! ⚡️</span><br><span class="line">The local CA is now installed in the Firefox trust store (requires browser restart)! 🦊</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2>
<p>默认情况下，mkcert 生成的是 PEM 格式的证书</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkcert localhost 127.0.0.1 ::1</span></span><br><span class="line">Using the local CA at &quot;/Users/jasper/Library/Application Support/mkcert&quot; ✨</span><br><span class="line"></span><br><span class="line">Created a new certificate valid for the following names 📜</span><br><span class="line"> - &quot;localhost&quot;</span><br><span class="line"> - &quot;127.0.0.1&quot;</span><br><span class="line"> - &quot;::1&quot;</span><br><span class="line"></span><br><span class="line">The certificate is at &quot;./localhost+1.pem&quot; and the key at &quot;./localhost+1-key.pem&quot; ✅</span><br></pre></td></tr></table></figure>
<p>如果希望生成 PKCS12 格式的证书（即.p12文件后缀的证书）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkcert -pkcs12 localhost 127.0.0.1 ::1</span></span><br><span class="line">mkcert -pkcs12 localhost 127.0.0.1 ::1</span><br><span class="line">Using the local CA at &quot;/Users/jasper/Library/Application Support/mkcert&quot; ✨</span><br><span class="line"></span><br><span class="line">Created a new certificate valid for the following names 📜</span><br><span class="line"> - &quot;localhost&quot;</span><br><span class="line"> - &quot;127.0.0.1&quot;</span><br><span class="line"> - &quot;::1&quot;</span><br><span class="line"></span><br><span class="line">The PKCS#12 bundle is at &quot;./localhost+2.p12&quot; ✅</span><br></pre></td></tr></table></figure>
<p>需要注意的是，PKCS12 格式证书的默认密码为 <code>changeit</code>，且目前没有参数以用于提供自定义密码（因为一些系统需要使用默认的<code>changeit</code>密码，因此作者决定进行保留，详情请参阅<a href="https://github.com/FiloSottile/mkcert/commit/6060e206a439bf6174cf9f2b2e77b1ba965cfe2f">6060e206a439bf6174cf9f2b2e77b1ba965cfe2f</a>）</p>
<p>其他格式或高级用法请参照</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-cert-file FILE, -key-file FILE, -p12-file FILE</span><br><span class="line">    Customize the output paths.</span><br><span class="line"></span><br><span class="line">-client</span><br><span class="line">    Generate a certificate for client authentication.</span><br><span class="line"></span><br><span class="line">-ecdsa</span><br><span class="line">    Generate a certificate with an ECDSA key.</span><br><span class="line"></span><br><span class="line">-pkcs12</span><br><span class="line">    Generate a &quot;.p12&quot; PKCS #12 file, also know as a &quot;.pfx&quot; file,</span><br><span class="line">    containing certificate and key for legacy applications.</span><br><span class="line"></span><br><span class="line">-csr CSR</span><br><span class="line">    Generate a certificate based on the supplied CSR. Conflicts with</span><br><span class="line">    all other flags and arguments except -install and -cert-file.</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<p><a href="https://github.com/FiloSottile/mkcert">mkcert github repository</a></p>
]]></content>
      <tags>
        <tag>https</tag>
        <tag>mkcert</tag>
      </tags>
  </entry>
  <entry>
    <title>为运行在 docker 中的 mysql 开启 binlog</title>
    <url>/2019/06/12/open-mysql-binlog-running-in-docker/</url>
    <content><![CDATA[<h2 id="使用-docker-run-来启动支持-binlog-的-mysql-数据库"><a class="markdownIt-Anchor" href="#使用-docker-run-来启动支持-binlog-的-mysql-数据库"></a> 使用 <code>docker run</code> 来启动支持 binlog 的 mysql 数据库</h2>
<p>通过在 <code>docker run</code> 命令后追加 args 即可开启 binlog，swarm 或 k8s 同理。<br>
需要注意的是，你要自行替换 shell 脚本中的如下内容：</p>
<ul>
<li><code>MYSQL_ROOT_PASSWORD</code>：mysql root 用户的密码</li>
<li><code>MYSQL_USER</code>：mysql 的初始化的普通用户</li>
<li><code>MYSQL_PASSWORD</code>：普通用户的密码</li>
<li><code>server-id</code>：随便填写，集群中不能重复</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">--restart always \</span><br><span class="line">--name mysql \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=xxx \</span><br><span class="line">-e MYSQL_USER=xxx \</span><br><span class="line">-e MYSQL_PASSWORD=xxx \</span><br><span class="line">-e MYSQL_DATABASE=metastore \</span><br><span class="line">-v `pwd`/data:/var/lib/mysql \</span><br><span class="line">-d mysql:5.7.25 \</span><br><span class="line">--server-id=xxx \</span><br><span class="line">--log-bin=/var/lib/mysql/mysql-bin.log \</span><br><span class="line">--binlog_do_db=binlog</span><br></pre></td></tr></table></figure>
<h2 id="验证-binlog-是否开启成功"><a class="markdownIt-Anchor" href="#验证-binlog-是否开启成功"></a> 验证 binlog 是否开启成功</h2>
<p>使用图形化连接工具或命令行方式访问数据库，运行如下命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+--------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                   <span class="operator">|</span> <span class="keyword">Value</span>                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+--------------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_bin                         <span class="operator">|</span> <span class="keyword">ON</span>                             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_basename                <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_index                   <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin.index <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_trust_function_creators <span class="operator">|</span> OFF                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_use_v1_row_events       <span class="operator">|</span> OFF                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sql_log_bin                     <span class="operator">|</span> <span class="keyword">ON</span>                             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+--------------------------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>看到 <code>log_bin</code> 为 <code>ON</code> 即说明 binlog 开启成功。<br>
如果需要查看更多关于 binlog 的信息，可以执行如下命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;%log%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------+---------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                              <span class="operator">|</span> <span class="keyword">Value</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------+---------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> back_log                                   <span class="operator">|</span> <span class="number">80</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_cache_size                          <span class="operator">|</span> <span class="number">32768</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_checksum                            <span class="operator">|</span> CRC32                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_direct_non_transactional_updates    <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_error_action                        <span class="operator">|</span> ABORT_SERVER                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_format                              <span class="operator">|</span> <span class="type">ROW</span>                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_group_commit_sync_delay             <span class="operator">|</span> <span class="number">0</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_group_commit_sync_no_delay_count    <span class="operator">|</span> <span class="number">0</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_gtid_simple_recovery                <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_max_flush_queue_time                <span class="operator">|</span> <span class="number">0</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_order_commits                       <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_row_image                           <span class="operator">|</span> <span class="keyword">FULL</span>                                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_rows_query_log_events               <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_stmt_cache_size                     <span class="operator">|</span> <span class="number">32768</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_transaction_dependency_history_size <span class="operator">|</span> <span class="number">25000</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> binlog_transaction_dependency_tracking     <span class="operator">|</span> COMMIT_ORDER                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> expire_logs_days                           <span class="operator">|</span> <span class="number">0</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> general_log                                <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> general_log_file                           <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>c7c7c88971b3.log             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_api_enable_binlog                   <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_flush_log_at_timeout                <span class="operator">|</span> <span class="number">1</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_flush_log_at_trx_commit             <span class="operator">|</span> <span class="number">1</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_locks_unsafe_for_binlog             <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_log_buffer_size                     <span class="operator">|</span> <span class="number">16777216</span>                                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_log_checksums                       <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_log_compressed_pages                <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_log_file_size                       <span class="operator">|</span> <span class="number">50331648</span>                                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_log_files_in_group                  <span class="operator">|</span> <span class="number">2</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_log_group_home_dir                  <span class="operator">|</span> .<span class="operator">/</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_log_write_ahead_size                <span class="operator">|</span> <span class="number">8192</span>                                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_max_undo_log_size                   <span class="operator">|</span> <span class="number">1073741824</span>                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_online_alter_log_max_size           <span class="operator">|</span> <span class="number">134217728</span>                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_undo_log_truncate                   <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_undo_logs                           <span class="operator">|</span> <span class="number">128</span>                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin                                    <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_basename                           <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_index                              <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin.index              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_trust_function_creators            <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_use_v1_row_events                  <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_builtin_as_identified_by_password      <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_error                                  <span class="operator">|</span> stderr                                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_error_verbosity                        <span class="operator">|</span> <span class="number">3</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_output                                 <span class="operator">|</span> FILE                                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_queries_not_using_indexes              <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_slave_updates                          <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_slow_admin_statements                  <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_slow_slave_statements                  <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_statements_unsafe_for_binlog           <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_syslog                                 <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_syslog_facility                        <span class="operator">|</span> daemon                                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_syslog_include_pid                     <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_syslog_tag                             <span class="operator">|</span>                                             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_throttle_queries_not_using_indexes     <span class="operator">|</span> <span class="number">0</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_timestamps                             <span class="operator">|</span> UTC                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_warnings                               <span class="operator">|</span> <span class="number">2</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_binlog_cache_size                      <span class="operator">|</span> <span class="number">18446744073709547520</span>                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_binlog_size                            <span class="operator">|</span> <span class="number">1073741824</span>                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_binlog_stmt_cache_size                 <span class="operator">|</span> <span class="number">18446744073709547520</span>                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_relay_log_size                         <span class="operator">|</span> <span class="number">0</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log                                  <span class="operator">|</span>                                             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log_basename                         <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>c7c7c88971b3<span class="operator">-</span>relay<span class="operator">-</span>bin       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log_index                            <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>c7c7c88971b3<span class="operator">-</span>relay<span class="operator">-</span>bin.index <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log_info_file                        <span class="operator">|</span> relay<span class="operator">-</span>log.info                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log_info_repository                  <span class="operator">|</span> FILE                                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log_purge                            <span class="operator">|</span> <span class="keyword">ON</span>                                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log_recovery                         <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> relay_log_space_limit                      <span class="operator">|</span> <span class="number">0</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_query_log                             <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_query_log_file                        <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>c7c7c88971b3<span class="operator">-</span>slow.log        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sql_log_off                                <span class="operator">|</span> OFF                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sync_binlog                                <span class="operator">|</span> <span class="number">1</span>                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sync_relay_log                             <span class="operator">|</span> <span class="number">10000</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sync_relay_log_info                        <span class="operator">|</span> <span class="number">10000</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------+---------------------------------------------+</span></span><br><span class="line"><span class="number">73</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<h2 id="查看-binlog"><a class="markdownIt-Anchor" href="#查看-binlog"></a> 查看 binlog</h2>
<p>执行一系列 DDL 和 DML 后，查看产生的 binlog，执行如下命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> binlog events <span class="keyword">in</span> <span class="string">&#x27;mysql-bin.000001&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----+----------------+-----------+-------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Log_name         <span class="operator">|</span> Pos <span class="operator">|</span> Event_type     <span class="operator">|</span> Server_id <span class="operator">|</span> End_log_pos <span class="operator">|</span> Info                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----+----------------+-----------+-------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000001</span> <span class="operator">|</span>   <span class="number">4</span> <span class="operator">|</span> Format_desc    <span class="operator">|</span>       <span class="number">123</span> <span class="operator">|</span>         <span class="number">123</span> <span class="operator">|</span> Server ver: <span class="number">5.7</span><span class="number">.25</span><span class="operator">-</span>log, Binlog ver: <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000001</span> <span class="operator">|</span> <span class="number">123</span> <span class="operator">|</span> Previous_gtids <span class="operator">|</span>       <span class="number">123</span> <span class="operator">|</span>         <span class="number">154</span> <span class="operator">|</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000001</span> <span class="operator">|</span> <span class="number">154</span> <span class="operator">|</span> Stop           <span class="operator">|</span>       <span class="number">123</span> <span class="operator">|</span>         <span class="number">177</span> <span class="operator">|</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----+----------------+-----------+-------------+---------------------------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<p><a href="https://stackoverflow.com/questions/26648821/how-can-i-enable-mysql-binary-logging-using-the-official-docker-image">how-can-i-enable-mysql-binary-logging-using-the-official-docker-image</a></p>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>mysql</tag>
        <tag>binlog</tag>
      </tags>
  </entry>
  <entry>
    <title>镜像源替换汇总</title>
    <url>/2019/06/17/summarized-how-to-replace-mirrors/</url>
    <content><![CDATA[<p>本篇文章用来汇总记录软件源的修改方式</p>
<h2 id="pip"><a class="markdownIt-Anchor" href="#pip"></a> <a href="https://mirrors.ustc.edu.cn/help/pypi.html">pip</a></h2>
<p>在用户家目录创建 <code>.pip</code> 文件夹，在 <code>.pip</code>文件夹内创建 <code>pip.conf</code>文件，文件内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://mirrors.ustc.edu.cn/pypi/web/simple</span><br><span class="line">format = columns</span><br></pre></td></tr></table></figure>
<h2 id="docker"><a class="markdownIt-Anchor" href="#docker"></a> docker</h2>
<h3 id="docker-ce-源"><a class="markdownIt-Anchor" href="#docker-ce-源"></a> docker ce 源</h3>
<p>用以下内容创建文件 <code>vi /etc/yum.repo.d/docker-ce.repo</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[docker-ce-stable]</span><br><span class="line">name=Docker CE Stable - $basearch</span><br><span class="line">#baseurl=https://download.docker.com/linux/centos/7/$basearch/stable</span><br><span class="line">baseurl=http://mirrors.ustc.edu.cn/docker-ce/linux/centos/7/$basearch/stable</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">#gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line">gpgkey=http://mirrors.ustc.edu.cn/docker-ce/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-stable-debuginfo]</span><br><span class="line">name=Docker CE Stable - Debuginfo $basearch</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/debug-$basearch/stable</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-stable-source]</span><br><span class="line">name=Docker CE Stable - Sources</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/source/stable</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-edge]</span><br><span class="line">name=Docker CE Edge - $basearch</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/$basearch/edge</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-edge-debuginfo]</span><br><span class="line">name=Docker CE Edge - Debuginfo $basearch</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/debug-$basearch/edge</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-edge-source]</span><br><span class="line">name=Docker CE Edge - Sources</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/source/edge</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-test]</span><br><span class="line">name=Docker CE Test - $basearch</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/$basearch/test</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-test-debuginfo]</span><br><span class="line">name=Docker CE Test - Debuginfo $basearch</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/debug-$basearch/test</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line">[docker-ce-test-source]</span><br><span class="line">name=Docker CE Test - Sources</span><br><span class="line">baseurl=https://download.docker.com/linux/centos/7/source/test</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br></pre></td></tr></table></figure>
<h3 id="docker-hub-源"><a class="markdownIt-Anchor" href="#docker-hub-源"></a> <a href="https://mirrors.ustc.edu.cn/help/dockerhub.html">docker hub 源</a></h3>
<p>Centos 7:</p>
<p>修改配置文件 <code>vi /etc/docker/daemon.json</code>，内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Mac OS:</p>
<p>通过客户端 app 直接配置即可<br>
配置所在路径为 Docker -&gt; Perferences -&gt; Daemon -&gt; Registry mirrors</p>
<h2 id="yum"><a class="markdownIt-Anchor" href="#yum"></a> yum</h2>
<h3 id="centos7-源"><a class="markdownIt-Anchor" href="#centos7-源"></a> <a href="https://mirrors.ustc.edu.cn/help/centos.html">Centos7 源</a></h3>
<p>先将自带的源进行备份 <code>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</code><br>
然后直接用以下内容创建文件 <code>vi /etc/yum.repo.d/CentOS-Base.repo</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># CentOS-Base.repo</span><br><span class="line">#</span><br><span class="line"># The mirror system uses the connecting IP address of the client and the</span><br><span class="line"># update status of each mirror to pick mirrors that are updated to and</span><br><span class="line"># geographically close to the client.  You should use this for CentOS updates</span><br><span class="line"># unless you are manually picking other mirrors.</span><br><span class="line">#</span><br><span class="line"># If the mirrorlist= does not work for you, as a fall back you can try the</span><br><span class="line"># remarked out baseurl= line instead.</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos/$releasever/os/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#released updates</span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates</span><br><span class="line"># mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates</span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos/$releasever/updates/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras</span><br><span class="line"># mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras</span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos/$releasever/extras/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus</span><br><span class="line"># mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus</span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos/$releasever/centosplus/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>
<h3 id="epel-源"><a class="markdownIt-Anchor" href="#epel-源"></a> <a href="https://mirrors.ustc.edu.cn/help/epel.html">epel 源</a></h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y epel-release</span><br><span class="line">sudo sed -e &#x27;s!^mirrorlist=!#mirrorlist=!g&#x27; \</span><br><span class="line">         -e &#x27;s!^#baseurl=!baseurl=!g&#x27; \</span><br><span class="line">         -e &#x27;s!//download\.fedoraproject\.org/pub!//mirrors.ustc.edu.cn!g&#x27; \</span><br><span class="line">         -e &#x27;s!http://mirrors\.ustc!https://mirrors.ustc!g&#x27; \</span><br><span class="line">         -i /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel-testing.repo</span><br></pre></td></tr></table></figure>
<h2 id="homebrew"><a class="markdownIt-Anchor" href="#homebrew"></a> homebrew</h2>
<h3 id="源代码仓库"><a class="markdownIt-Anchor" href="#源代码仓库"></a> <a href="https://mirrors.ustc.edu.cn/help/brew.git.html">源代码仓库</a></h3>
<p>替换为USTC镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd &quot;$(brew --repo)&quot;</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br></pre></td></tr></table></figure>
<p>重置为官方镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd &quot;$(brew --repo)&quot;</span><br><span class="line">git remote set-url origin https://github.com/Homebrew/brew.git</span><br></pre></td></tr></table></figure>
<h3 id="bottles-源"><a class="markdownIt-Anchor" href="#bottles-源"></a> <a href="https://mirrors.ustc.edu.cn/help/homebrew-bottles.html">Bottles 源</a></h3>
<p>Homebrew 预编译二进制软件包</p>
<p>收录仓库包括：</p>
<ul>
<li>homebrew/homebrew-core</li>
<li>homebrew/homebrew-dupes</li>
<li>homebrew/homebrew-php</li>
<li>homebrew/homebrew-science</li>
<li>homebrew/homebrew-nginx</li>
<li>homebrew/homebrew-apache</li>
<li>homebrew/homebrew-portable</li>
</ul>
<p>对于bash用户：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.bash_profile</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure>
<p>对于zsh用户：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.zshrc</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure>
<h3 id="core-源"><a class="markdownIt-Anchor" href="#core-源"></a> <a href="https://mirrors.ustc.edu.cn/help/homebrew-core.git.html">Core 源</a></h3>
<p>Homebrew 核心软件仓库</p>
<p>替换为USTC镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure>
<p>重置为官方镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</span><br><span class="line">git remote set-url origin https://github.com/Homebrew/homebrew-core</span><br></pre></td></tr></table></figure>
<h3 id="cask-源"><a class="markdownIt-Anchor" href="#cask-源"></a> <a href="https://mirrors.ustc.edu.cn/help/homebrew-cask.git.html">Cask 源</a></h3>
<p>提供 macOS 应用和大型二进制文件</p>
<p>替换为USTC镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd &quot;$(brew --repo)&quot;/Library/Taps/homebrew/homebrew-cask</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br></pre></td></tr></table></figure>
<p>重置为官方镜像：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd &quot;$(brew --repo)&quot;/Library/Taps/homebrew/homebrew-cask</span><br><span class="line">git remote set-url origin https://github.com/Homebrew/homebrew-cask</span><br></pre></td></tr></table></figure>
<h2 id="maven"><a class="markdownIt-Anchor" href="#maven"></a> maven</h2>
<p>替换为阿里镜像:<br>
在 <code>&lt;mirrors&gt;</code> 节点下添加字节点：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>创建 JDK8 的Maven项目:<br>
在 <code>&lt;profiles&gt;</code> 节点下添加字节点：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk18<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>mirrors</tag>
        <tag>pip</tag>
        <tag>homebrew</tag>
        <tag>dockerhub</tag>
        <tag>yum</tag>
        <tag>centos7</tag>
        <tag>epel</tag>
        <tag>maven</tag>
      </tags>
  </entry>
</search>
